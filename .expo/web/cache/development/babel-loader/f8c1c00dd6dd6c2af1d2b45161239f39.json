{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport React, { useEffect, useState, useReducer } from 'react';\nimport { StatusBar } from 'expo-status-bar';\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport View from \"react-native-web/dist/exports/View\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport TextInput from \"react-native-web/dist/exports/TextInput\";\nimport FlatList from \"react-native-web/dist/exports/FlatList\";\nimport Image from \"react-native-web/dist/exports/Image\";\nimport { getAllPok } from \"./src/services/getAPI\";\nimport { Provider } from 'react-redux';\nimport store from \"./src/store/store\";\nimport pokemon from \"./src/reducers/getPokByName.reducer\";\nimport SafeAreaView from \"react-native-web/dist/exports/SafeAreaView\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nexport default function App() {\n  var _useReducer = useReducer(pokemon),\n      _useReducer2 = _slicedToArray(_useReducer, 2),\n      state = _useReducer2[0],\n      dispatch = _useReducer2[1];\n\n  console.log(state);\n\n  var _useState = useState([]),\n      _useState2 = _slicedToArray(_useState, 2),\n      allPok = _useState2[0],\n      setAllPok = _useState2[1];\n\n  useEffect(function _callee() {\n    return _regeneratorRuntime.async(function _callee$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            _context.next = 2;\n            return _regeneratorRuntime.awrap(getAllPok(setAllPok));\n\n          case 2:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, null, null, null, Promise);\n  }, []);\n  {\n    console.log(allPok[0].sprites.back_default);\n  }\n\n  var renderItem = function renderItem(_ref) {\n    var item = _ref.item,\n        index = _ref.index;\n    return _jsxs(View, {\n      style: styles.item,\n      children: [_jsx(Image, {\n        style: styles.image,\n        resizeMode: \"contain\",\n        source: item.sprites.back_default\n      }), _jsx(Text, {\n        children: item.species.name\n      })]\n    });\n  };\n\n  return _jsx(Provider, {\n    store: store,\n    children: _jsx(SafeAreaView, {\n      children: _jsx(FlatList, {\n        numColumns: 2,\n        style: styles.container,\n        data: allPok,\n        renderItem: renderItem,\n        keyExtractor: function keyExtractor(item) {\n          return \"key-\" + item.species.name;\n        }\n      })\n    })\n  });\n}\nvar styles = StyleSheet.create({\n  container: {\n    flex: 1\n  },\n  item: {\n    flex: 1\n  },\n  image: {\n    width: '150',\n    height: '150'\n  }\n});","map":{"version":3,"sources":["/home/luis/Projetos/Repositorios/meusProjetos/pokenative/App.js"],"names":["React","useEffect","useState","useReducer","StatusBar","getAllPok","Provider","store","pokemon","App","state","dispatch","console","log","allPok","setAllPok","sprites","back_default","renderItem","item","index","styles","image","species","name","container","StyleSheet","create","flex","width","height"],"mappings":";;AAAA,OAAOA,KAAP,IAAeC,SAAf,EAA0BC,QAA1B,EAAoCC,UAApC,QAAqD,OAArD;AACA,SAASC,SAAT,QAA0B,iBAA1B;;;;;;;;AASA,SAASC,SAAT;AACA,SAASC,QAAT,QAAyB,aAAzB;AACA,OAAOC,KAAP;AACA,OAAOC,OAAP;;;;AAGA,eAAe,SAASC,GAAT,GAAe;AAC5B,oBAA0BN,UAAU,CAACK,OAAD,CAApC;AAAA;AAAA,MAAOE,KAAP;AAAA,MAAcC,QAAd;;AAEAC,EAAAA,OAAO,CAACC,GAAR,CAAYH,KAAZ;;AAEA,kBAA4BR,QAAQ,CAAC,EAAD,CAApC;AAAA;AAAA,MAAOY,MAAP;AAAA,MAAeC,SAAf;;AAEAd,EAAAA,SAAS,CAAE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,6CACHI,SAAS,CAACU,SAAD,CADN;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAAF,EAEN,EAFM,CAAT;AAIA;AAACH,IAAAA,OAAO,CAACC,GAAR,CAAYC,MAAM,CAAC,CAAD,CAAN,CAAUE,OAAV,CAAkBC,YAA9B;AAA4C;;AAE7C,MAAMC,UAAU,GAAG,SAAbA,UAAa,OAAmB;AAAA,QAAjBC,IAAiB,QAAjBA,IAAiB;AAAA,QAAXC,KAAW,QAAXA,KAAW;AACpC,WACE,MAAC,IAAD;AAAM,MAAA,KAAK,EAAEC,MAAM,CAACF,IAApB;AAAA,iBACE,KAAC,KAAD;AACE,QAAA,KAAK,EAAEE,MAAM,CAACC,KADhB;AAEE,QAAA,UAAU,EAAC,SAFb;AAGE,QAAA,MAAM,EAAEH,IAAI,CAACH,OAAL,CAAaC;AAHvB,QADF,EAME,KAAC,IAAD;AAAA,kBAAOE,IAAI,CAACI,OAAL,CAAaC;AAApB,QANF;AAAA,MADF;AAWD,GAZD;;AAcA,SACE,KAAC,QAAD;AAAU,IAAA,KAAK,EAAGjB,KAAlB;AAAA,cACE,KAAC,YAAD;AAAA,gBACE,KAAC,QAAD;AACE,QAAA,UAAU,EAAE,CADd;AAEE,QAAA,KAAK,EAAEc,MAAM,CAACI,SAFhB;AAGE,QAAA,IAAI,EAAEX,MAHR;AAIE,QAAA,UAAU,EAAEI,UAJd;AAKE,QAAA,YAAY,EAAE,sBAACC,IAAD;AAAA,0BAAiBA,IAAI,CAACI,OAAL,CAAaC,IAA9B;AAAA;AALhB;AADF;AADF,IADF;AA8BD;AA4BD,IAAMH,MAAM,GAAGK,UAAU,CAACC,MAAX,CAAkB;AAC/BF,EAAAA,SAAS,EAAE;AACTG,IAAAA,IAAI,EAAE;AADG,GADoB;AAI/BT,EAAAA,IAAI,EAAE;AACJS,IAAAA,IAAI,EAAE;AADF,GAJyB;AAO/BN,EAAAA,KAAK,EAAE;AACLO,IAAAA,KAAK,EAAE,KADF;AAELC,IAAAA,MAAM,EAAE;AAFH;AAPwB,CAAlB,CAAf","sourcesContent":["import React, {useEffect, useState, useReducer} from 'react';\nimport { StatusBar } from 'expo-status-bar';\nimport { StyleSheet,\n  Text,\n  View,\n  TouchableOpacity,\n  TextInput,\n  FlatList,\n  Image\n} from 'react-native';\nimport { getAllPok } from './src/services/getAPI';\nimport { Provider } from 'react-redux';\nimport store from './src/store/store';\nimport pokemon from './src/reducers/getPokByName.reducer';\nimport { SafeAreaView } from 'react-native-web';\n\nexport default function App() {\n  const [state, dispatch] = useReducer(pokemon);\n\n  console.log(state);\n\n  const [allPok, setAllPok] = useState([]);\n\n  useEffect( async () => {\n    await getAllPok(setAllPok);\n  }, []);\n  \n  {console.log(allPok[0].sprites.back_default)}\n\n  const renderItem = ({item, index}) => {\n    return (\n      <View style={styles.item}>\n        <Image\n          style={styles.image}\n          resizeMode='contain'\n          source={item.sprites.back_default}\n        />\n        <Text>{item.species.name}</Text>\n      </View>\n    )\n    \n  }\n\n  return (\n    <Provider store={ store }>\n      <SafeAreaView>\n        <FlatList \n          numColumns={2}\n          style={styles.container}\n          data={allPok}\n          renderItem={renderItem}\n          keyExtractor={(item) => `key-${item.species.name}`}\n        />\n      </SafeAreaView>\n      {/* <View style={styles.container}>\n        <View style={styles.inputContainer} >\n          <TextInput style={styles.input} placeholder=\"Nome do Pokemon\" />\n          <TouchableOpacity>\n            <Text>Search</Text>\n          </TouchableOpacity>\n        </View>\n        <StatusBar style=\"auto\" />\n        <FlatList\n          data={allPok}\n          renderItem={({item}) => (\n            <View >\n              <Text>{item.species.name}</Text>\n            </View>\n          )}\n        />\n      </View> */}\n    </Provider>\n  );\n}\n\n// const styles = StyleSheet.create({\n//   container: {\n//     flex: 1,\n//     // backgroundColor: '#e7e',\n//     alignItems: 'center',\n//     justifyContent: 'center',\n//   },\n//   inputContainer: {\n//     flexDirection: 'row',\n//     margin: 30,\n//     backgroundColor: '#e7e',\n//   },\n//   input: {\n//     flex: 1,\n//     fontSize: 22,\n//     // color: '#000000',\n//   },\n//   addButton: {\n//     flex: 1,\n//     width: '20%',\n//     marginLeft: 2,\n//     alignItems: 'center',\n//     alignSelf: 'center'\n//   }\n// });\n\nconst styles = StyleSheet.create({\n  container: {\n    flex: 1,\n  },\n  item: {\n    flex: 1,\n  },\n  image: {\n    width: '150',\n    height: '150',\n  }\n});\n"]},"metadata":{},"sourceType":"module"}