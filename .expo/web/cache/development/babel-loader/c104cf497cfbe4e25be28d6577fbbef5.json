{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\n\nvar getAllPok = function getAllPok(setAllPok) {\n  var URL, res, data, list, allPokemons;\n  return _regeneratorRuntime.async(function getAllPok$(_context) {\n    while (1) {\n      switch (_context.prev = _context.next) {\n        case 0:\n          _context.prev = 0;\n          URL = \"https://pokeapi.co/api/v2/pokemon?limit=10\";\n          _context.next = 4;\n          return _regeneratorRuntime.awrap(fetch(URL));\n\n        case 4:\n          res = _context.sent;\n          _context.next = 7;\n          return _regeneratorRuntime.awrap(res.json());\n\n        case 7:\n          data = _context.sent;\n          list = data.results;\n          allPokemons = list.forEach(function (pok) {\n            getPokByName(pok.name);\n          });\n          console.log(allPokemons);\n          _context.next = 16;\n          break;\n\n        case 13:\n          _context.prev = 13;\n          _context.t0 = _context[\"catch\"](0);\n          console.log(_context.t0.message);\n\n        case 16:\n        case \"end\":\n          return _context.stop();\n      }\n    }\n  }, null, null, [[0, 13]], Promise);\n};\n\nvar getPokByName = function getPokByName(namePok) {\n  var URL, res, data;\n  return _regeneratorRuntime.async(function getPokByName$(_context2) {\n    while (1) {\n      switch (_context2.prev = _context2.next) {\n        case 0:\n          _context2.prev = 0;\n          URL = \"https://pokeapi.co/api/v2/pokemon/\" + namePok;\n          _context2.next = 4;\n          return _regeneratorRuntime.awrap(fetch(URL));\n\n        case 4:\n          res = _context2.sent;\n          _context2.next = 7;\n          return _regeneratorRuntime.awrap(res.json());\n\n        case 7:\n          data = _context2.sent;\n          return _context2.abrupt(\"return\", data);\n\n        case 11:\n          _context2.prev = 11;\n          _context2.t0 = _context2[\"catch\"](0);\n          console.log(_context2.t0.message);\n\n        case 14:\n        case \"end\":\n          return _context2.stop();\n      }\n    }\n  }, null, null, [[0, 11]], Promise);\n};\n\nexport { getAllPok, getPokByName };","map":{"version":3,"sources":["/home/luis/Projetos/Repositorios/meusProjetos/pokenative/src/services/getAPI.js"],"names":["getAllPok","setAllPok","URL","fetch","res","json","data","list","results","allPokemons","forEach","pok","getPokByName","name","console","log","message","namePok"],"mappings":";;AAAA,IAAMA,SAAS,GAAG,SAAZA,SAAY,CAAOC,SAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAGRC,UAAAA,GAHQ;AAAA;AAAA,2CAIIC,KAAK,CAACD,GAAD,CAJT;;AAAA;AAIRE,UAAAA,GAJQ;AAAA;AAAA,2CAKKA,GAAG,CAACC,IAAJ,EALL;;AAAA;AAKRC,UAAAA,IALQ;AAMRC,UAAAA,IANQ,GAMDD,IAAI,CAACE,OANJ;AAQRC,UAAAA,WARQ,GAQMF,IAAI,CAACG,OAAL,CAAa,UAACC,GAAD,EAAS;AACxCC,YAAAA,YAAY,CAACD,GAAG,CAACE,IAAL,CAAZ;AACD,WAFmB,CARN;AAYdC,UAAAA,OAAO,CAACC,GAAR,CAAYN,WAAZ;AAZc;AAAA;;AAAA;AAAA;AAAA;AAiBdK,UAAAA,OAAO,CAACC,GAAR,CAAY,YAAIC,OAAhB;;AAjBc;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,CAAlB;;AAqBA,IAAMJ,YAAY,GAAG,SAAfA,YAAe,CAAOK,OAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEXf,UAAAA,GAFW,0CAEgCe,OAFhC;AAAA;AAAA,2CAGCd,KAAK,CAACD,GAAD,CAHN;;AAAA;AAGXE,UAAAA,GAHW;AAAA;AAAA,2CAIEA,GAAG,CAACC,IAAJ,EAJF;;AAAA;AAIXC,UAAAA,IAJW;AAAA,4CAKVA,IALU;;AAAA;AAAA;AAAA;AAQjBQ,UAAAA,OAAO,CAACC,GAAR,CAAY,aAAIC,OAAhB;;AARiB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,CAArB;;AAYA,SAAShB,SAAT,EAAoBY,YAApB","sourcesContent":["const getAllPok = async (setAllPok) => {\n  try {\n    // const URL = `https://pokeapi.co/api/v2/pokemon/pikachu`;\n    const URL = `https://pokeapi.co/api/v2/pokemon?limit=10`;\n    const res = await fetch(URL);\n    const data = await res.json();\n    const list = data.results\n\n    const allPokemons = list.forEach((pok) => {\n      getPokByName(pok.name);\n    });\n\n    console.log(allPokemons);\n\n    \n    // setAllPok(data.results);\n  } catch (err) {\n    console.log(err.message);\n  }\n}\n\nconst getPokByName = async (namePok) => {\n  try {\n    const URL = `https://pokeapi.co/api/v2/pokemon/${namePok}`;\n    const res = await fetch(URL)\n    const data = await res.json();\n    return data;\n    // console.log(data);\n  } catch (err) {\n    console.log(err.message);\n  }\n}\n\nexport { getAllPok, getPokByName };\n"]},"metadata":{},"sourceType":"module"}