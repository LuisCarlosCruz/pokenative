{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\n\nvar getAllPok = function getAllPok(setAllPok) {\n  var URL, res, data, listPokemons;\n  return _regeneratorRuntime.async(function getAllPok$(_context) {\n    while (1) {\n      switch (_context.prev = _context.next) {\n        case 0:\n          _context.prev = 0;\n          URL = \"https://pokeapi.co/api/v2/pokemon?limit=50\";\n          _context.next = 4;\n          return _regeneratorRuntime.awrap(fetch(URL));\n\n        case 4:\n          res = _context.sent;\n          _context.next = 7;\n          return _regeneratorRuntime.awrap(res.json());\n\n        case 7:\n          data = _context.sent;\n          listPokemons = data.results;\n          listPokemons.forEach(function (pok, i) {\n            console.log(pok.name, i);\n          });\n          _context.next = 15;\n          break;\n\n        case 12:\n          _context.prev = 12;\n          _context.t0 = _context[\"catch\"](0);\n          console.log(_context.t0.message);\n\n        case 15:\n        case \"end\":\n          return _context.stop();\n      }\n    }\n  }, null, null, [[0, 12]], Promise);\n};\n\nvar getPokByName = function getPokByName(namePok) {\n  var URL, res, data;\n  return _regeneratorRuntime.async(function getPokByName$(_context2) {\n    while (1) {\n      switch (_context2.prev = _context2.next) {\n        case 0:\n          _context2.prev = 0;\n          URL = \"https://pokeapi.co/api/v2/pokemon/\" + namePok;\n          _context2.next = 4;\n          return _regeneratorRuntime.awrap(fetch(URL));\n\n        case 4:\n          res = _context2.sent;\n          _context2.next = 7;\n          return _regeneratorRuntime.awrap(res.json());\n\n        case 7:\n          data = _context2.sent;\n          console.log(data);\n          _context2.next = 14;\n          break;\n\n        case 11:\n          _context2.prev = 11;\n          _context2.t0 = _context2[\"catch\"](0);\n          console.log(_context2.t0.message);\n\n        case 14:\n        case \"end\":\n          return _context2.stop();\n      }\n    }\n  }, null, null, [[0, 11]], Promise);\n};\n\nexport { getAllPok, getPokByName };","map":{"version":3,"sources":["/home/luis/Projetos/Repositorios/meusProjetos/pokenative/src/services/getAPI.js"],"names":["getAllPok","setAllPok","URL","fetch","res","json","data","listPokemons","results","forEach","pok","i","console","log","name","message","getPokByName","namePok"],"mappings":";;AAAA,IAAMA,SAAS,GAAG,SAAZA,SAAY,CAAOC,SAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAGRC,UAAAA,GAHQ;AAAA;AAAA,2CAIIC,KAAK,CAACD,GAAD,CAJT;;AAAA;AAIRE,UAAAA,GAJQ;AAAA;AAAA,2CAKKA,GAAG,CAACC,IAAJ,EALL;;AAAA;AAKRC,UAAAA,IALQ;AAMRC,UAAAA,YANQ,GAMOD,IAAI,CAACE,OANZ;AASdD,UAAAA,YAAY,CAACE,OAAb,CAAqB,UAACC,GAAD,EAAMC,CAAN,EAAY;AAC/BC,YAAAA,OAAO,CAACC,GAAR,CAAYH,GAAG,CAACI,IAAhB,EAAsBH,CAAtB;AACD,WAFD;AATc;AAAA;;AAAA;AAAA;AAAA;AAgBdC,UAAAA,OAAO,CAACC,GAAR,CAAY,YAAIE,OAAhB;;AAhBc;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,CAAlB;;AAoBA,IAAMC,YAAY,GAAG,SAAfA,YAAe,CAAOC,OAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEXf,UAAAA,GAFW,0CAEgCe,OAFhC;AAAA;AAAA,2CAGCd,KAAK,CAACD,GAAD,CAHN;;AAAA;AAGXE,UAAAA,GAHW;AAAA;AAAA,2CAIEA,GAAG,CAACC,IAAJ,EAJF;;AAAA;AAIXC,UAAAA,IAJW;AAKjBM,UAAAA,OAAO,CAACC,GAAR,CAAYP,IAAZ;AALiB;AAAA;;AAAA;AAAA;AAAA;AAOjBM,UAAAA,OAAO,CAACC,GAAR,CAAY,aAAIE,OAAhB;;AAPiB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,CAArB;;AAWA,SAASf,SAAT,EAAoBgB,YAApB","sourcesContent":["const getAllPok = async (setAllPok) => {\n  try {\n    // const URL = `https://pokeapi.co/api/v2/pokemon/pikachu`;\n    const URL = `https://pokeapi.co/api/v2/pokemon?limit=50`;\n    const res = await fetch(URL);\n    const data = await res.json();\n    const listPokemons = data.results\n    // console.log( 'TODOS OS POK', listpokemons);\n\n    listPokemons.forEach((pok, i) => {\n      console.log(pok.name, i);\n    })\n\n    \n    // setAllPok(data.results);\n  } catch (err) {\n    console.log(err.message);\n  }\n}\n\nconst getPokByName = async (namePok) => {\n  try {\n    const URL = `https://pokeapi.co/api/v2/pokemon/${namePok}`;\n    const res = await fetch(URL)\n    const data = await res.json();\n    console.log(data);\n  } catch (err) {\n    console.log(err.message);\n  }\n}\n\nexport { getAllPok, getPokByName };\n"]},"metadata":{},"sourceType":"module"}