{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\n\nvar getAllPok = function getAllPok(setAllPok) {\n  var URL, res, data, list;\n  return _regeneratorRuntime.async(function getAllPok$(_context2) {\n    while (1) {\n      switch (_context2.prev = _context2.next) {\n        case 0:\n          _context2.prev = 0;\n          URL = \"https://pokeapi.co/api/v2/pokemon?limit=10\";\n          _context2.next = 4;\n          return _regeneratorRuntime.awrap(fetch(URL));\n\n        case 4:\n          res = _context2.sent;\n          _context2.next = 7;\n          return _regeneratorRuntime.awrap(res.json());\n\n        case 7:\n          data = _context2.sent;\n          list = data.results;\n          list.forEach(function _callee(pok) {\n            return _regeneratorRuntime.async(function _callee$(_context) {\n              while (1) {\n                switch (_context.prev = _context.next) {\n                  case 0:\n                    _context.next = 2;\n                    return _regeneratorRuntime.awrap(console.log(getPokByName(pok.name)));\n\n                  case 2:\n                  case \"end\":\n                    return _context.stop();\n                }\n              }\n            }, null, null, null, Promise);\n          });\n          _context2.next = 15;\n          break;\n\n        case 12:\n          _context2.prev = 12;\n          _context2.t0 = _context2[\"catch\"](0);\n          console.log(_context2.t0.message);\n\n        case 15:\n        case \"end\":\n          return _context2.stop();\n      }\n    }\n  }, null, null, [[0, 12]], Promise);\n};\n\nvar getPokByName = function getPokByName(namePok) {\n  var URL, res, data;\n  return _regeneratorRuntime.async(function getPokByName$(_context3) {\n    while (1) {\n      switch (_context3.prev = _context3.next) {\n        case 0:\n          _context3.prev = 0;\n          URL = \"https://pokeapi.co/api/v2/pokemon/\" + namePok;\n          _context3.next = 4;\n          return _regeneratorRuntime.awrap(fetch(URL));\n\n        case 4:\n          res = _context3.sent;\n          _context3.next = 7;\n          return _regeneratorRuntime.awrap(res.json());\n\n        case 7:\n          data = _context3.sent;\n          return _context3.abrupt(\"return\", data);\n\n        case 11:\n          _context3.prev = 11;\n          _context3.t0 = _context3[\"catch\"](0);\n          console.log(_context3.t0.message);\n\n        case 14:\n        case \"end\":\n          return _context3.stop();\n      }\n    }\n  }, null, null, [[0, 11]], Promise);\n};\n\nexport { getAllPok, getPokByName };","map":{"version":3,"sources":["/home/luis/Projetos/Repositorios/meusProjetos/pokenative/src/services/getAPI.js"],"names":["getAllPok","setAllPok","URL","fetch","res","json","data","list","results","forEach","pok","console","log","getPokByName","name","message","namePok"],"mappings":";;AAAA,IAAMA,SAAS,GAAG,SAAZA,SAAY,CAAOC,SAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAGRC,UAAAA,GAHQ;AAAA;AAAA,2CAIIC,KAAK,CAACD,GAAD,CAJT;;AAAA;AAIRE,UAAAA,GAJQ;AAAA;AAAA,2CAKKA,GAAG,CAACC,IAAJ,EALL;;AAAA;AAKRC,UAAAA,IALQ;AAMRC,UAAAA,IANQ,GAMDD,IAAI,CAACE,OANJ;AAQdD,UAAAA,IAAI,CAACE,OAAL,CAAc,iBAAOC,GAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qDACNC,OAAO,CAACC,GAAR,CAAYC,YAAY,CAACH,GAAG,CAACI,IAAL,CAAxB,CADM;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WAAd;AARc;AAAA;;AAAA;AAAA;AAAA;AAedH,UAAAA,OAAO,CAACC,GAAR,CAAY,aAAIG,OAAhB;;AAfc;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,CAAlB;;AAmBA,IAAMF,YAAY,GAAG,SAAfA,YAAe,CAAOG,OAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEXd,UAAAA,GAFW,0CAEgCc,OAFhC;AAAA;AAAA,2CAGCb,KAAK,CAACD,GAAD,CAHN;;AAAA;AAGXE,UAAAA,GAHW;AAAA;AAAA,2CAIEA,GAAG,CAACC,IAAJ,EAJF;;AAAA;AAIXC,UAAAA,IAJW;AAAA,4CAKVA,IALU;;AAAA;AAAA;AAAA;AAQjBK,UAAAA,OAAO,CAACC,GAAR,CAAY,aAAIG,OAAhB;;AARiB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,CAArB;;AAYA,SAASf,SAAT,EAAoBa,YAApB","sourcesContent":["const getAllPok = async (setAllPok) => {\n  try {\n    // const URL = `https://pokeapi.co/api/v2/pokemon/pikachu`;\n    const URL = `https://pokeapi.co/api/v2/pokemon?limit=10`;\n    const res = await fetch(URL);\n    const data = await res.json();\n    const list = data.results\n\n    list.forEach( async (pok) => {\n      await console.log(getPokByName(pok.name));\n    });\n\n    \n    // setAllPok(data.results);\n  } catch (err) {\n    console.log(err.message);\n  }\n}\n\nconst getPokByName = async (namePok) => {\n  try {\n    const URL = `https://pokeapi.co/api/v2/pokemon/${namePok}`;\n    const res = await fetch(URL)\n    const data = await res.json();\n    return data;\n    // console.log(data);\n  } catch (err) {\n    console.log(err.message);\n  }\n}\n\nexport { getAllPok, getPokByName };\n"]},"metadata":{},"sourceType":"module"}